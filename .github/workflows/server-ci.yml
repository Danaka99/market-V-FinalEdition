name: Server CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "**"
  pull_request:
    branches:
      - main
    paths:
      - "**"
  workflow_dispatch:

jobs:
  test:
    name: Run Server Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: "6.0"
          mongodb-port: 27017

      - name: Install dependencies
        run: npm ci

      - name: Use .env.test file
        run: |
          if [ -f ".env.test" ]; then
            cp .env.test .env
          else
            echo "Warning: .env.test file not found"
            touch .env
          fi
        shell: bash

      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB to be ready..."
          timeout 30 bash -c 'until nc -z localhost 27017; do sleep 1; done'
        shell: bash

      - name: Run Unit Tests
        run: npm run test:unit
        env:
          NODE_ENV: test
          CONNECTION_STRING: mongodb://localhost:27017/test
          MONGODB_TIMEOUT: 30000
          MOCHA_TIMEOUT: 30000

      - name: Run Integration Tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          CONNECTION_STRING: mongodb://localhost:27017/test
          MONGODB_TIMEOUT: 30000
          MOCHA_TIMEOUT: 30000

      - name: Run Performance Tests
        run: npm run test:performance
        env:
          NODE_ENV: test
          CONNECTION_STRING: mongodb://localhost:27017/test
          MONGODB_TIMEOUT: 30000
          MOCHA_TIMEOUT: 30000

      - name: Generate Test Coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          CONNECTION_STRING: mongodb://localhost:27017/test
          MONGODB_TIMEOUT: 30000
          MOCHA_TIMEOUT: 30000

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 7